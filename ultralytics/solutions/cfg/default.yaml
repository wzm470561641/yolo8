# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# Default solutions settings

names: dict # (dict) solutions dictionary containing model names and their configurations
view_img: False # (bool) display an output image
window_name: "Ultralytics Solutions" # (str) name of the window displaying the output
line_thickness: &line_thickness 2 # (int) thickness of lines drawn on the image
track_thickness: 2 # (int) thickness of tracking lines
draw_tracks: False # (bool) enable or disable drawing of tracks
track_color: None # (None or list) color of tracking lines

# Object counter settings -----------------------------------------------------------------
reg_pts: &reg_pts [(20, 400), (1260, 400)] # (list) points defining a counting region
count_reg_color: &count_reg_color "(255, 0, 255)" # (str) color of the counting region line in RGB
count_txt_color: "(0, 0, 0)" # (str) color of the count text in RGB
count_bg_color: "(255, 255, 255)" # (str) background color of the count text in RGB
view_in_counts: True # (bool) display the count of objects entering the region
view_out_counts: True # (bool) display the count of objects exiting the region
region_thickness: 5 # (int) thickness of the counting region line
line_dist_thresh: &line_dist_thresh 15 # (int) distance threshold for counting lines

# Workouts monitoring settings ------------------------------------------------------------
kpts_to_check: [6, 8, 10] # (list) keypoints to check for pose estimation
pose_up_angle: 145 # (int) angle for the upper position in a workout
pose_down_angle: 90 # (int) angle for the lower position in a workout
pose_type: "pullup" # (str) type of workout being monitored

# Anchors and aliases ---------------------------------------------------------------------
spdl_dist_thresh: *line_dist_thresh # (int) distance threshold for speed estimation
region_color: *count_reg_color # (str) color of regions used in queue management

# Heatmaps settings -----------------------------------------------------------------------
shape: "circle" # (str) shape of the heatmap marker
heatmap_alpha: 0.5 # (float) transparency of the heatmap
count_reg_pts: *reg_pts # (list) points defining a counting region for the heatmap
decay_factor: 0.99 # (float) factor for heatmap decay over time
colormap: cv2.COLORMAP_JET # (int) colormap used for heatmap visualization

# Distance calculation settings -----------------------------------------------------------
pixels_per_meter: 10 # (int) conversion factor from pixels to meters
line_color: (255, 255, 0) # (tuple) color of the distance measurement line in RGB
centroid_color: (255, 0, 255) # (tuple) color of the centroids in RGB

# Analytics settings ----------------------------------------------------------------------
type: "line" # (str) type of plot for analytics (line, area, etc.)
writer: None # (None or object) writer object for saving outputs
im0_shape: None # (None or tuple) shape of the input image
title: "ultralytics" # (str) title of the plot
x_label: "x" # (str) label for the x-axis
y_label: "y" # (str) label for the y-axis
line_width: *line_thickness # Use the alias again to reference the same value
bg_color: "white" # (str) background color of the plot
fg_color: "black" # (str) foreground color of the plot
points_width: 10 # (int) width of points in the plot
fontsize: 13 # (int) font size for text in the plot
save_img: True # (bool) save the output image
max_points: 50 # (int) maximum number of points to plot
